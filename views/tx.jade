extends layout

block content
  form(role="search", action="http://mychain.io/search")
    .form-group
      input.form-control.spaced(type="text", placeholder="Search for an address, transaction, or block", name="q" value=tx.txid)
  h3.text-center.fairly-spaced
    | Transaction: 
    a(href='http://mychain.io/tx/'+tx.txid) #{tx.txid}
  table.table.table-striped.spaced
    thead
      tr
        th(colspan=2) Raw Data
    tbody
      tr
        td(title='Transaction version number') Version:
        td #{tx.version}
      tr
        td(title='Number of inputs') Input count:
        td #{tx.vin.length}
      tr
        td(title='A list of the inputs') Inputs:
        td: a(href='#inputs') See below
      tr
        td(title='Number of outputs') Output count:
        td #{tx.vout.length}
      tr
        td(title='A list of the outputs') Outputs:
        td: a(href='#outputs') See below
      tr
        td(title='If not zero, the block height or timestamp when this transaction is finalized') Lock time:
        td #{tx.locktime}
  table.table.table-striped.spaced
    thead
      tr
        th(colspan=2) Other Information
    tbody
      tr
        td(title='The number of confirmations for this transaction') Blocks confirmed:
        td #{tx.confirmations}
      tr
        td(title='The number of bitcoins paid to miners for processing') Fee paid:
        td #{tx.fee}
      if tx.confirmations != 0
        tr
          td('A block containing this transaction') Contained in block:
          td: a(href='http://mychain.io/block/'+tx.blockhash) #{tx.blockhash}
        tr
          td(title='Unix timestamp of the containing block') Time:
          td #{tx.time}
      tr
        td(title='True if this is a generation transaction for the miner reward') Generation transaction:
        if tx.isCoinbase
          td True
        else
          td False
  table.table.table-striped.spaced
    thead
      tr
        th#inputs(colspan=3) Inputs
    tbody
      each input, i in tx.vin
        if !tx.isCoinbase
          tr
            td: a(href='http://mychain.io/tx/'+tx.txid+'/input/'+i) #{i}
            td(title='The id of a transaction redeeming this input') Redeemed txid:
            td: a(href='http://mychain.io/tx/'+input.txid) #{input.txid}
          tr
            td
            td(title='The index of the output being redeemed') Redeemed output index:
            td: a(href='http://mychain.io/tx/'+input.txid+'/output/'+input.vout) #{input.vout}
          tr
            td
            td(title='The signature script') ScriptSig:
            td #{input.scriptSig.asm}
        else
          tr
            td: a(href='http://mychain.io/tx/'+tx.txid+'/input/'+i) #{i}
            td(title='The contents of a generation transaction input') Coinbase:
            td #{input.coinbase}
  table.table.table-striped.spaced
    thead
      tr
        th#outputs(colspan=3) Outputs
    tbody
      each output in tx.vout
        tr
          td: a(href='http://mychain.io/tx/'+tx.txid+'/output/'+output.n) #{output.n}
          td(title='The number of bitcoins sent') Value:
          td #{output.value} BTC
        tr
          td
          td(title='The script to be satisfied when redeeming this output') ScriptPubKey:
          td #{output.scriptPubKey.asm}
